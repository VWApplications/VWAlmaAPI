# Generated by Django 2.1.4 on 2019-09-21 20:17

from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('auth', '0009_alter_user_last_name_max_length'),
    ]

    operations = [
        migrations.CreateModel(
            name='User',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('password', models.CharField(max_length=128, verbose_name='password')),
                ('is_superuser', models.BooleanField(default=False, help_text='Designates that this user has all permissions without explicitly assigning them.', verbose_name='superuser status')),
                ('email', models.EmailField(help_text='Email that will be used as username.', max_length=254, unique=True, verbose_name='E-mail')),
                ('name', models.CharField(help_text='Full user name.', max_length=150, verbose_name='Name')),
                ('photo', models.ImageField(blank=True, help_text='Photo of user.', null=True, upload_to='accounts', verbose_name='Photo')),
                ('is_teacher', models.BooleanField(default=False, help_text='Verify if the user is teacher or student', verbose_name='Is Teacher?')),
                ('is_active', models.BooleanField(default=True, help_text='Verify if the user is active.', verbose_name='Is Active?')),
                ('is_staff', models.BooleanField(default=False, help_text='Verify if the user is a staff.', verbose_name='Is Staff?')),
                ('last_login', models.DateTimeField(blank=True, help_text='Last moment the user logged in.', null=True, verbose_name='Last Login')),
                ('created_at', models.DateTimeField(auto_now_add=True, help_text='Date that the user is created.', verbose_name='Created at')),
                ('updated_at', models.DateTimeField(auto_now=True, help_text='Date that the user is updated.', verbose_name='Updated at')),
                ('groups', models.ManyToManyField(blank=True, help_text='The groups this user belongs to. A user will get all permissions granted to each of their groups.', related_name='user_set', related_query_name='user', to='auth.Group', verbose_name='groups')),
                ('user_permissions', models.ManyToManyField(blank=True, help_text='Specific permissions for this user.', related_name='user_set', related_query_name='user', to='auth.Permission', verbose_name='user permissions')),
            ],
            options={
                'db_table': 'accounts',
                'ordering': ('email',),
            },
        ),
    ]
